---
import Layout from "../layouts/Layout.astro";
import { socials } from "../config/socials";
import SocialIcons from "../components/SocialIcons.astro";
---

<Layout title="Soumyo Dey">
  <main
    class="flex flex-col items-center justify-center min-h-[calc(100vh-4rem)] py-12"
  >
    <div class="text-center">
      <div class="relative w-32 h-32 mx-auto mb-8">
        <div
          class="absolute inset-0 bg-gradient-to-r from-white to-black rounded-full"
        >
        </div>
        <picture>
          <source
            type="image/webp"
            srcset="/images/profile-128.webp 1x, /images/profile-256.webp 2x"
          />
          <img
            src="/images/profile-128.jpg"
            srcset="/images/profile-128.jpg 1x, /images/profile-256.jpg 2x"
            alt="Profile"
            class="relative w-full h-full rounded-full object-cover"
            width="128"
            height="128"
            loading="eager"
            decoding="async"
          />
      </div>

      <h1 class="text-4xl font-bold mb-4">Soumyo Dey</h1>
      <p class="text-lg text-gray-600 dark:text-gray-400 mb-8">
        A Man who travels the world eating noodles
      </p>

      <div class="flex justify-center space-x-6 mb-12">
        {
          socials.map((social) => (
            <SocialIcons {...social} />
          ))
        }
      </div>
    </div>
  </main>

  <!-- Newsletter section with optimized loading -->
<div 
  id="newsletter-section"
  class="w-full rounded-lg border border-gray-200 dark:border-gray-800 bg-white dark:bg-black overflow-hidden"
>
  <!-- Static content shown immediately -->
  <div class="p-6 text-center">
    <h3 class="text-xl font-semibold mb-2">Subscribe to My Newsletter</h3>
    <p class="text-gray-600 dark:text-gray-400 mb-4">Get the latest updates directly in your inbox.</p>
    <button
      id="load-newsletter"
      class="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
      onclick="loadNewsletterEmbed()"
    >
      Show Newsletter
    </button>
  </div>

  <!-- Container for lazy-loaded iframe -->
  <div id="substack-container" class="hidden">
    <div class="w-full h-[320px] flex items-center justify-center text-gray-500 dark:text-gray-400">
      Loading newsletter...
    </div>
  </div>
</div>

<script is:inline>
  function loadNewsletterEmbed() {
    const container = document.getElementById('substack-container');
    const button = document.getElementById('load-newsletter');
    
    if (container && button) {
      // Show container
      container.classList.remove('hidden');
      
      // Create and append iframe
      const iframe = document.createElement('iframe');
      iframe.src = 'https://stochasticmusings.substack.com/embed';
      iframe.style.width = '100%';
      iframe.style.height = '320px';
      iframe.style.border = 'none';
      iframe.classList.add('rounded-lg', 'dark:filter', 'dark:invert');
      
      // Replace loading message with iframe
      container.innerHTML = '';
      container.appendChild(iframe);
      
      // Hide button
      button.parentElement.classList.add('hidden');
    }
  }

  // Load newsletter automatically if user has previously interacted
  if (localStorage.getItem('newsletter-interaction')) {
    window.addEventListener('load', () => {
      setTimeout(loadNewsletterEmbed, 1000);
    });
  }

  // Save interaction preference
  document.getElementById('load-newsletter')?.addEventListener('click', () => {
    localStorage.setItem('newsletter-interaction', 'true');
  });
</script>

  <script>
    // Only load iframe when it comes into view
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          const container = document.getElementById('substack-container');
          if (container && !container.querySelector('iframe')) {
            const iframe = document.createElement('iframe');
            iframe.src = 'https://stochasticmusings.substack.com/embed';
            iframe.height = '320';
            iframe.className = 'w-full h-full rounded-lg dark:filter dark:invert';
            iframe.loading = 'lazy';
            
            // Remove placeholder and add iframe
            const placeholder = document.getElementById('substack-placeholder');
            if (placeholder) {
              placeholder.remove();
            }
            container.appendChild(iframe);
            
            // Disconnect observer after loading
            observer.disconnect();
          }
        }
      });
    }, {
      rootMargin: '50px' // Start loading slightly before it comes into view
    });

    // Start observing the container
    const container = document.getElementById('substack-container');
    if (container) {
      observer.observe(container);
    }
  </script>

</Layout>

<style>
  iframe {
    min-width: 480px;
    max-width: 100%;
    width: 100%;
    height: 320px;
    background: transparent;
  }

  @media (max-width: 480px) {
    iframe {
      min-width: 100%;
    }
  }
</style>
