---
import Layout from '../layouts/Layout.astro';
import { socials } from '../config/socials';
import SocialIcons from '../components/SocialIcons.astro';
---

<Layout title="Soumyo Dey">
  <main class="flex min-h-[calc(100vh-4rem)] flex-col items-center justify-center py-12">
    <div class="text-center">
      <div class="relative mx-auto mb-8 h-32 w-32">
        <div class="absolute inset-0 rounded-full bg-gradient-to-r from-white to-black"></div>
        <picture>
          <source
            type="image/webp"
            srcset="/images/profile-128.webp 1x, /images/profile-256.webp 2x"
            sizes="128px"
          />
          <img
            src="/images/profile-128.jpg"
            srcset="/images/profile-128.jpg 1x, /images/profile-256.jpg 2x"
            alt="Profile"
            class="relative h-full w-full rounded-full object-cover"
            width="128"
            height="128"
            loading="eager"
            fetchpriority="high"
            decoding="async"
          />
        </picture>
      </div>

      <h1 class="mb-4 text-4xl font-bold">Soumyo Dey</h1>
      <p class="mb-8 text-lg text-gray-600 dark:text-gray-400">
        A Man who travels the world eating noodles
      </p>

      <div class="mb-12 flex justify-center space-x-6">
        {socials.map((social) => <SocialIcons {...social} />)}
      </div>

      <!-- Newsletter section with optimized loading -->
      <div
        id="newsletter-section"
        class="mx-auto w-full max-w-2xl overflow-hidden rounded-lg border border-gray-200 bg-white dark:border-gray-800 dark:bg-black"
      >
        <!-- Static content shown immediately -->
        <div class="p-6 text-center">
          <h2 class="mb-2 text-xl font-semibold">Subscribe to Stochastic Musings!</h2>
          <p class="mb-4 text-gray-600 dark:text-gray-400">
            Get my writings directly in your inbox.
          </p>
          <button
            id="load-newsletter"
            class="rounded-lg bg-blue-600 px-4 py-2 text-white transition-colors hover:bg-blue-700"
            onclick="loadNewsletterEmbed()"
          >
            Subscribe Here!
          </button>
        </div>

        <!-- Container for lazy-loaded iframe -->
        <div id="substack-container" class="hidden">
          <div
            class="flex h-[320px] w-full items-center justify-center text-gray-500 dark:text-gray-400"
          >
            Loading newsletter...
          </div>
        </div>
      </div>
    </div>
    <script is:inline>
      function loadNewsletterEmbed() {
        const container = document.getElementById('substack-container');
        const button = document.getElementById('load-newsletter');

        if (container && button) {
          // Show container
          container.classList.remove('hidden');

          // Create and append iframe
          const iframe = document.createElement('iframe');
          iframe.src = 'https://stochasticmusings.substack.com/embed';
          iframe.style.width = '100%';
          iframe.style.height = '320px';
          iframe.style.border = 'none';
          iframe.classList.add('rounded-lg', 'dark:filter', 'dark:invert');

          // Replace loading message with iframe
          container.innerHTML = '';
          container.appendChild(iframe);

          // Hide button
          button.parentElement.classList.add('hidden');
        }
      }

      // Load newsletter automatically if user has previously interacted
      if (localStorage.getItem('newsletter-interaction')) {
        window.addEventListener('load', () => {
          setTimeout(loadNewsletterEmbed, 1000);
        });
      }

      // Save interaction preference
      document.getElementById('load-newsletter')?.addEventListener('click', () => {
        localStorage.setItem('newsletter-interaction', 'true');
      });
    </script>

    <script>
      // Only load iframe when it comes into view
      const observer = new IntersectionObserver(
        (entries) => {
          entries.forEach((entry) => {
            if (entry.isIntersecting) {
              const container = document.getElementById('substack-container');
              if (container && !container.querySelector('iframe')) {
                const iframe = document.createElement('iframe');
                iframe.src = 'https://stochasticmusings.substack.com/embed';
                iframe.height = '320';
                iframe.className = 'w-full h-full rounded-lg dark:filter dark:invert';
                iframe.loading = 'lazy';

                // Remove placeholder and add iframe
                const placeholder = document.getElementById('substack-placeholder');
                if (placeholder) {
                  placeholder.remove();
                }
                container.appendChild(iframe);

                // Disconnect observer after loading
                observer.disconnect();
              }
            }
          });
        },
        {
          rootMargin: '50px', // Start loading slightly before it comes into view
        },
      );

      // Start observing the container
      const container = document.getElementById('substack-container');
      if (container) {
        observer.observe(container);
      }
    </script>
  </main>
</Layout>

<style>
  iframe {
    min-width: 480px;
    max-width: 100%;
    width: 100%;
    height: 320px;
    background: transparent;
  }

  @media (max-width: 480px) {
    iframe {
      min-width: 100%;
    }
  }
</style>
